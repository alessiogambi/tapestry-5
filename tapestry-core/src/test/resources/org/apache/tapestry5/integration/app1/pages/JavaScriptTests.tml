<html t:type="Border" xmlns:t="http://tapestry.apache.org/schema/tapestry_5_0_0.xsd">

<h1>JavaScript Tests</h1>

<p>
    This page executes a number of JavaScript tests.
</p>

<div id="tests">

<h2>Publish / Subscribe</h2>


<div>
    <p> Ensure that the message object passed to pub() is delivered to the listener.</p>
      <pre>
        var message = { }
        var rcvd;

        sub("foo", document, function(m) { rcvd = m; })

        pub("foo", document, message)

        assertSame(rcvd, message)        
        </pre>
</div>

<div>
    <p> Ensure that the second object to a listener is the source object.</p>
      <pre>
        var unsub = sub("foo", null, function(message, meta) { assertSame(meta.element, document); })

        pub("foo", document, null)

        unsub()
        </pre>
</div>

<div>
    <p>Check that the function returned from sub() can be used to cancel message receipt.</p>
      <pre>
        var count = 0;

        pub("foo", document); assertEqual(count, 0)

        var unsub = sub("foo", document, function() {
        count++; } )

        pub("foo", document);
        assertEqual(count, 1)

        pub("foo", document); assertEqual(count, 2)

        pub("bar",
        document); assertEqual(count, 2)

        unsub()

        pub("foo", document);
        assertEqual(count, 2)
          </pre>
</div>

<div>
    <p> Ensure that messages are delivered to specific listeners before general listeners.
    </p>
      <pre>
        var pubs = []

        sub("foo", null, function() { pubs.push("general1") })

        sub("foo", document, function() {
        pubs.push("specific1") })

        sub("foo", null, function() { pubs.push("general2") })

        sub("foo", document, function()
        {
        pubs.push("specific2")
        })

        pub("foo", document, {})

        assertEqual(pubs, ["specific1", "specific2",
        "general1",
        "general2"])                
        </pre>
</div>


<div>
    <p>Publish/subscribe via client id rather than element.</p>

      <pre>
        var element = new Element("span",{ id: "zaphod" }).update("Published Message Source Zaphod")

        document.body.insert({bottom:
        element})

        var pubs = []

        sub("bar", "zaphod",
        function() {
        pubs.push("specific") } )

        pub("bar",
        "zaphod", {})

        assertEqual(pubs, ["specific"])

        T5.dom.remove(element)  
    </pre>
</div>

<div>
    <p>Listeners invocations can be cancelled.</p>

        <pre>
            var pubs = []

            sub("bazz", null, function() { pubs.push("first"); })
            sub("bazz", null, function(message, meta) { pubs.push("second"); meta.cancel(); })
            sub("bazz", null, function() { pubs.push("third"); })

            pub("bazz", {})

            assertEqual(pubs, ["first", "second" ]);
        </pre>
</div>

</div>

<script>
    <![CDATA[

    pub = T5.pub
    sub = T5.sub


    assertEqual = JST.assertEqual
    assertSame = JST.assertSame

    JST.runTestSuite("tests");
    ]]>
</script>
</html>

